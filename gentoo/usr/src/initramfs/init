#!/bin/busybox sh
export PATH="/bin:/sbin:/usr/bin:/usr/sbin"

die() {
	echo "Oops! looks like you're fucked. Do you happen to have any live USBs around?"
	echo -e "Last command said, and I quote, '\e[1;31m$1\e[00m'"
	echo "(Here's a shell in case you know what to do)"
	exec sh
}

echo "Beware, Inside there be Dragons!"

# mount /proc, /sys and /dev
echo -n "Mounting"
mount -t proc none /proc && echo -n " /proc" || die "/proc mount failed."
mount -t sysfs none /sys && echo -n " /sys" || die "/sys mount failed."
mount -t devtmpfs none /dev && echo -n " /dev" || die "/dev mount failed."
echo " done."

for PARAM in $(cat /proc/cmdline) ; do
	case ${PARAM} in
		maintain)
			echo "maintenance flag is enabled. dropping to a shell"
			exec sh
		;;
	esac
done

while ! (findfs UUID=48249452-e545-4a94-9da6-48e628368289 > /dev/null 2>&1); do sleep 1; done
crypt_keystore=$(findfs UUID=48249452-e545-4a94-9da6-48e628368289)
echo "Key found on ${crypt_keystore}"

crypt_root=$(findfs UUID=78ad20f5-c609-4060-9f21-671fb0b7ee51)
crypt_resume=$(findfs UUID=ac2e87c2-02dd-4396-b858-dd1849f60873)
crypt_misc=$(findfs UUID=e73a024a-74b7-45c5-85e9-10ef748d5b4d)

cryptsetup luksOpen ${crypt_keystore} keystore
mount -o ro /dev/mapper/keystore /mnt/keystore

echo "Decrypting ${crypt_resume}"
cryptsetup open ${crypt_resume} swap -d /mnt/keystore/swap.key

echo "Decrypting ${crypt_root}"
cryptsetup luksOpen ${crypt_root} root -d /mnt/keystore/root.key

echo "Decrypting ${crypt_misc}"
cryptsetup luksOpen ${crypt_misc} storage -d /mnt/keystore/storage.key

umount /mnt/keystore
cryptsetup close keystore

resume="/dev/mapper/swap"
root="/dev/mapper/root"

echo "Trying to resume from ${resume}"
printf '%u:%u\n' $(stat -L -c '0x%t 0x%T' ${resume}) > /sys/power/resume || die "cannot resume"

# Open the encrypted partitions
mount -o rw ${root} /mnt/root || die "mounting /mnt/root failed."

# Clean up
umount /proc
umount /sys
umount /dev

# Switch root
exec switch_root /mnt/root /sbin/openrc-init || die "switch_root failed. You were this close to success."
